library(ggplot2)
library(zoo)
library(reshape)
library(plyr)
library(dplyr)
library(scales)
library(data.table)
library(signal)
library(matrixStats)
library(lme4)
library(arm)
library(broom)
library(tidyr)
library(wesanderson)
library(readxl)
library(extrafont)
## 1. Load ACT/SAT data
#LOAD MULTIPLE EXCEL SHEETS INTO SEPARATE DFS
#get names of sheets
sheets <- readxl::excel_sheets("~/Documents/Felicia Zhang/Felicia/Princeton/ConsultingClub/Mindprint/Math.xlsx")
#load in excel data as 1 big file
lst <- lapply(sheets, function(sheet)
readxl::read_excel("~/Documents/Felicia Zhang/Felicia/Princeton/ConsultingClub/Mindprint/Math.xlsx", sheet = sheet)
)
#prepare names
names(lst) <- sheets
#turn it into DF
list2env(lst, envir = .GlobalEnv)
#difference between 70C, 72C, Combo v2.4: three different tests based on where we had sufficient student data, noting the one called the Combo is a mixture of SAT and ACT questions.
#0 = incorrect, 1 = correct, 2 = skip
## 2. Load mindprint data
mindprintdata <- read.csv("~/Documents/Felicia Zhang/Felicia/Princeton/ConsultingClub/Mindprint/mindprint_data.csv", header=T)
## SET UP DF
names(`70C`)[2:61] = 1:60
names(`72C`)[2:61] = 1:60
# Mindprint subjects
subs <- unique(mindprintdata$student_id)
# duplicates = subID 441, 8826, 4573,
# Find matching subjects in 70C
foo <- `70C`[22:46,]
foo[] <- lapply(foo, function(x) as.numeric(as.character(x)))
colnames(foo)[1] <- "student_id"
foofinal1 <- merge(mindprintdata, foo)
# Find matching subjects in 72C
foo <- `72C`[22:47,]
foo[] <- lapply(foo, function(x) as.numeric(as.character(x)))
colnames(foo)[1] <- "student_id"
foofinal2 <- merge(mindprintdata, foo)
finalDF <- rbind(foofinal1,foofinal2)
# calculate ACT math score (total number of questions = 60)
finalDF$ACTmathraw <- rowSums(finalDF[43:102])
finalDF$ACTmathscore <- finalDF$ACTmathraw / 60
# remove missing data
finalDF2 <- na.omit(finalDF)
View(finalDF2)
write.csv(finalDF2, "Math.csv", row.names=TRUE)
ggplot(finalDF2,aes(x=SM_Sz,y=ACTmathscore))+
geom_point(size=3)+
theme_bw()+
theme(panel.grid.major = element_blank(),panel.grid.minor = element_blank(), axis.line = element_line(colour = "black"))+
labs(x = "Normed score for visual motor speed", y = "ACT math score (% correct)")+
theme(plot.title = element_text(face="bold", size=14, hjust=0))+
theme(axis.title = element_text(face="bold", size=14))+
theme(axis.text.x  = element_text(size=14),axis.text.y  = element_text(size=14))+
theme(legend.text=element_text(size=14),legend.title=element_text(size=14))+
theme(plot.title = element_text(hjust = 0.5))+
theme(legend.position = "none")+
theme(text=element_text(family="Times"))+
scale_y_continuous(labels=percent,limits=c(0,1),breaks=seq(0,1,.1))+
stat_smooth(method=lm, se=FALSE)
cor.test(finalDF2$SM_Sz, finalDF2$ACTmathscore, method="pearson")
